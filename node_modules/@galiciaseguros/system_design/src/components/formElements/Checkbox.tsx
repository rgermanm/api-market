import React, { HTMLAttributes, useContext, useEffect, useState } from "react";
import { c } from "../../colors";
import { ThemeContext } from "../../hooks/themeProvider";
import styles from './checkbox.module.css'

export interface Props extends HTMLAttributes<HTMLInputElement> {

    disabled?: boolean,

    desription?: string,
    textOn?: string,
    textOff?: string,
    initialValue?: boolean
}

export const Checkbox = ({ initialValue = false, disabled = false, textOn = "", textOff = "", desription = "" }: Props) => {

    const [checked, setChecked] = useState(initialValue);
    const { theme } = useContext(ThemeContext);

    useEffect(()=>{

        var checkbox= document.getElementById("some-checkbox") as HTMLInputElement;
        checkbox['indeterminate'] = true;
    },[])

    return (
        <div>
            <div className={styles.checkboxInnerContainer}>
           
                <input id="some-checkbox" disabled={disabled}  style={{accentColor:c({type:"primary",brand:theme})}} className={disabled ? styles.inputDisabled : styles.inputEnabled} onChange={(e) => setChecked(e.target.checked)} checked={checked} type="checkbox" />
                    
            
                {(textOn != "" && textOff != "") && <p className={styles.statusText}>{checked ? textOn : textOff}</p>}
            </div>
            {desription != "" && <p className={styles.descriptionText}>{desription}</p>}
        </div>
    )
}