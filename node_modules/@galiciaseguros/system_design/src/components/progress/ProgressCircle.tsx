import React, { FC, HTMLAttributes, useContext } from "react";
import { c } from "../../colors";
import { ThemeContext } from "../../hooks/themeProvider";
import styles from './progressCircle.module.css'
import { StepLabel } from "./StepLabel";
export interface Props extends HTMLAttributes<HTMLDivElement> {
    /** Setea el número total de steps*/
    steps?: number,
    /** Setea la posición inicial*/
    position?: number,

    /** Label correspondiente a cada paso del progress bar  */
    stepTitles?: string[];
    stepDescriptions?:string[]
}

export const ProgressCircle: FC<Props> = ({ steps = 2, position = 0, stepTitles = [],stepDescriptions=[]}: Props) => {

    const { theme } = useContext(ThemeContext);


    const getRotation = () => {

        return (180 / steps) * (position) + "deg"

    }
    return (
        <div className={styles.progressCircleContainer
        }>
            <div className={styles.circleWrap}>
                <div className={styles.circle} >
                    <div className={`${styles.mask} ${styles.full}`} style={{ rotate: getRotation() }}>
                        <div className={styles.fill} style={{ backgroundColor:c({type:"primary",brand:theme}),rotate: getRotation() }} ></div>
                    </div>
                    <div className={`${styles.mask} ${styles.half}`}>
                        <div className={styles.fill} style={{backgroundColor:c({type:"primary",brand:theme}), rotate: getRotation() }}></div>
                    </div>
                    <div style={{color:c({type:"primary",brand:theme})}}className={styles.insideCircle}> {position}/{steps} </div>
                </div>

            </div>
            {stepTitles.length>0&&<StepLabel title={stepTitles[position]?stepTitles[position]:""} subtitle={stepDescriptions[position]?stepDescriptions[position]:""}></StepLabel>}</div>
    )
}