import React, { FC, HTMLAttributes } from "react";
import { StepLabel } from "./StepLabel";
//import styles from './stepper.module.css'
import { c } from './../../colors'
export interface Props extends HTMLAttributes<HTMLDivElement> {

    /*Sentido de orientacion del stepper*/
    direction?: "horizontal" | "vertical"
}

interface Step {
    title: string,
    subtitle: string,
    state?: 'completed' | 'active' | 'disabled' | 'enabled',

}

export const Stepper: FC<Props> = ({ direction = "horizontal" }: Props) => {

    const steps: Step[] = [
        {
            title: "Primer Step",
            subtitle: "Detalle",
            state: "completed"
        },
        {
            title: "Segundo Step",
            subtitle: "Detalle",
            state: "active"
        },
        {
            title: "Tercer Step",
            subtitle: "Detalle",
            state: "disabled"
        },
    ]
    const d = (dir: 'horizontal' | 'vertical') => {
        switch (dir) {
            case 'horizontal':
                return "row";
                break;
            case 'vertical':
                return 'column';
            default:
                return 'row';
        }
    }

    return (

        <>
            <div style={{ display: "flex", flexDirection: d(direction), alignItems: "center" }}>
                {steps.map((m, i) => <><StepLabel state={m.state} title={m.title} hasIcon={true} step={i + 1} subtitle={m.subtitle}></StepLabel>
                    {i < steps.length - 1 && <div style={{
                        width: d(direction) == "row" ? '67px' : '1px',
                        height: d(direction) == 'row' ? '1px' : '67px',
                        marginLeft: d(direction) == "row" ? '8px' : '0px',
                        marginRight: d(direction) == "row" ? '8px' : '0px',
                        marginTop: d(direction) == "row" ? '0px' : '8px',
                        marginBottom: d(direction) == "row" ? '0px' : '8px',
                        backgroundColor: c({
                            type: 'grey-60',
                        })
                    }}></div>}
                </>)
                }
            </div>
        </>
    )

}