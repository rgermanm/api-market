import { faCheck } from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import React, { FC, HTMLAttributes, useContext } from "react";
import { c } from "../../colors";
import { ThemeContext } from "../../hooks/themeProvider";
import styles from './stepIcon.module.css'

export interface Props extends HTMLAttributes<HTMLDivElement> {
    /** Step Number **/
    step?: any,

    /**Tipo de step icon */
    type?: "regular" | "small"

    /**Estado del √çcono */
    state: 'completed' | 'active' | 'disabled' | 'enabled'

}

export const StepIcon: FC<Props> = ({ state = 'enabled', step = 1, type = 'regular' }: Props) => {

    const { theme } = useContext(ThemeContext);


    const getStepIcon = () => {
        switch (type) {
            case 'regular':
                return (<div
                    className={regular[state].container}
                    style={{
                        backgroundColor: regular[state].containerbackgroundColor,
                        color: regular[state].containerColor,
                        borderColor: regular[state].containerBorderColor,
                    }}
                >
                    <div
                        style={{
                            backgroundColor: regular[state].iconBackgroundColor,
                            color: regular[state].iconColor,
                            borderColor: regular[state].iconBorderColor,
                        }}
                        className={regular[state].icon}>
                        {state == 'completed' ?
                            <FontAwesomeIcon
                                icon={faCheck}
                                color={c({ type: 'white' })}
                            ></FontAwesomeIcon>
                            :
                            <p style={{ padding: 0, margin: 0 }}>{step}</p>}
                    </div>
                </div >)
                break;
            case 'small':
                return (<div className={small[state].container}
                    style={{
                        backgroundColor: small[state].containerbackgroundColor,
                        color: small[state].containerColor,
                        borderColor: small[state].containerBorderColor,
                    }}>
                    <div className={small[state].icon}
                        style={{
                            backgroundColor: small[state].iconBackgroundColor,
                            color: small[state].iconColor,
                            borderColor: small[state].iconBorderColor,
                        }}
                    >
                    </div>
                </div >)
                break;
        }
    }

    const regular = {
        'completed': {
            container: styles.regularCompletedContainer,
            icon: styles.regularCompletedIcon,
            containerbackgroundColor: "",
            containerColor: "",
            containerBorderColor: "",
            iconBackgroundColor: c({ type: "primary", brand: theme }),
            iconColor: c({ type: "primary", brand: theme }),
            iconBorderColor: c({ type: "primary", brand: theme }),
        },
        'active': {
            container: styles.regularActiveContainer,
            icon: styles.regularActiveIcon,
            containerbackgroundColor: "",
            containerColor: c({ type: "primary", brand: theme }),
            containerBorderColor: c({ type: "primary", brand: theme }),
            iconBackgroundColor: "",
            iconColor: "",
            iconBorderColor: "",
        },
        'enabled': {
            container: styles.regularEnabledContainer,
            icon: styles.regularEnabledIcon,
            containerbackgroundColor: "",
            containerColor: c({ type: "primary", brand: theme }),
            containerBorderColor: c({ type: "primary", brand: theme }),
            iconBackgroundColor: "",
            iconColor: "",
            iconBorderColor: "",

        },
        'disabled': {
            container: styles.regularDisabledContainer,
            icon: styles.regularDisabledIcon,
            containerbackgroundColor: "",
            containerColor: "",
            containerBorderColor: "",
            iconBackgroundColor: "",
            iconColor: "",
            iconBorderColor: "",
        }
    }

    const small = {
        'completed': {
            container: styles.smallCompletedContainer,
            icon: styles.smallCompletedIcon,
            containerbackgroundColor: c({ type: "primary", brand: theme }),
            containerColor: c({ type: "primary", brand: theme }),
            containerBorderColor: c({ type: "primary", brand: theme }),
            iconBackgroundColor: "",
            iconColor: "",
            iconBorderColor: "",
        },
        'active': {
            container: styles.smallActiveContainer,
            icon: styles.smallActiveIcon,
            containerbackgroundColor: "",
            containerColor:  c({ type: "primary", brand: theme }),
            containerBorderColor:  c({ type: "primary", brand: theme }),
            iconBackgroundColor:  c({ type: "primary", brand: theme }),
            iconColor: "",
            iconBorderColor: "",

        },
        'enabled': {
            container: styles.smallEnabledContainer,
            icon: styles.smallEnabledIcon,
            containerbackgroundColor: "",
            containerColor:  c({ type: "primary", brand: theme }),
            containerBorderColor:  c({ type: "primary", brand: theme }),
            iconBackgroundColor:  c({ type: "primary", brand: theme }),
            iconColor: "",
            iconBorderColor: "",

        },
        'disabled': {
            container: styles.smallDisabledContainer,
            icon: styles.smallDisabledIcon,
            containerbackgroundColor: "",
            containerColor: "",
            containerBorderColor: "",
            iconBackgroundColor: "",
            iconColor: "",
            iconBorderColor: "",
        }
    }

    return (

        getStepIcon()

    )
}