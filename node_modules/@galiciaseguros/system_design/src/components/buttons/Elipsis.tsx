
import React, { HTMLAttributes } from "react";
import useComponentVisible from "../../hooks/useComponentVisible";
import { Dropdown } from "../dropdown/Dropdown";
import styles from './elipsis.module.css'
interface Props extends HTMLAttributes<HTMLButtonElement> {

    disabled?: boolean,
    listPosition?:"left"|"right"
}

export const Elipsis = ({ disabled = false, listPosition="left" }: Props) => {
    const { ref, isComponentVisible, setIsComponentVisible } = useComponentVisible(false);


    const getPositionStyle={
        
       "left":styles.bottomLeft,
       "right":styles.bottomRight,
      
    }

    return (
        <div className={styles.securityArea} style={{ width: "fit-content", position: "relative"}}>
            <div onClick={() => setIsComponentVisible(!isComponentVisible)} className={disabled ? styles.elipsisBoxDisabled : styles.elipsisBox}>
                <div className={styles.elipsisCircleContainer}>
                    <div className={styles.elipsisCircle}></div>
                    <div className={styles.elipsisCircle}></div>
                    <div className={styles.elipsisCircle}></div>
                </div>

            </div>
            <div ref={ref} className={getPositionStyle[listPosition]}>
                {isComponentVisible && <Dropdown   setSeleted={(e)=>console.log(e)} options={[{ label: "Opcion 1", value: "1" }]}></Dropdown>}
            </div>
        </div>
    )
}