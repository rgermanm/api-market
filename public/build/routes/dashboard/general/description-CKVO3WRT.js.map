{
  "version": 3,
  "sources": ["../../../../../app/routes/dashboard/general/description.tsx"],
  "sourcesContent": ["import { Box, Button, c, Grid, Table, Tabs, Text } from \"@galiciaseguros/system_design\";\nimport { useSearchParams } from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport data from \"./../../../components/AsideMenu/apis.json\";\nimport { faCopy, faCheck } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Description() {\n\n\n    const sectionMap = {\n        \"auth\": \"Authorization\",\n        \"headers\": \"Headers\",\n        \"errors\": \"Errors\",\n        \"response\": \"Response\",\n        \"request\": \"Request\",\n    }\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [section, setSection] = useState(\"headers\")\n    const [copied, setCopied] = useState(-1)\n\n    useEffect(() => {\n        if (searchParams.get(\"section\") != null) {\n            setSection(searchParams.get(\"section\"))\n        }\n    }, [searchParams.get(\"section\")])\n\n    useEffect(() => {\n        console.log(\"EXEC!\")\n        if (copied != -1) {\n            setTimeout(() =>\n                setCopied(-1)\n                , 1000)\n        }\n    }, [copied])\n    return (\n        <>\n\n            <Box columns={10}>\n                <div style={{ marginBottom: 20 }}>\n                    <Text type={\"S1\"}>\n                        {sectionMap[section]}\n                    </Text>\n                </div>\n                {data[0].apis[0][section].map((i: any) =>\n\n                    <>\n                        <div style={{ marginBottom: 10 }}>\n                            <Text type={\"S4\"}>\n                                {i.subtitle}\n                            </Text>\n                        </div>\n                        <div style={{ marginBottom: 20 }}>\n                            <Text type={\"S5\"}>\n                                {i.info}\n                            </Text>\n                        </div>\n                        {i.table && <Table data={i.table} />}\n                        {i.json &&\n                            <Grid style={{ marginTop: 20, marginBottom: 20 }}>\n                                <Box columns={12} style={{ padding: 30, backgroundColor: c({ type: \"grey-80\" }) }}>\n                                    <pre style={{ color: \"lightgray\" }}>{JSON.stringify(i.json, null, 2)}</pre>\n                                    <Grid style={{display:\"flex\",alignItems:\"center\"}}>\n                                        <Box columns={3}>\n                                            <Button\n                                                rightIcon={copied != i ? faCopy : faCheck}\n                                                onClick={() => {\n                                                    navigator.clipboard.writeText(JSON.stringify(i.json, null, 2)).then(() => {\n                                                        setCopied(i)\n                                                    })\n                                                }}\n\n                                                label={copied != i ? \"Copy to clipboard\" : \"Copied\"} disabled={copied == i} variant={copied != i ? \"primary\" : \"tertiary\"} ></Button>\n                                        </Box>\n                                        <Box columns={5}>\n\n                                        <a\n                                            href={`data:text/json;charset=utf-8,${encodeURIComponent(\n                                                JSON.stringify(i.json)\n                                            )}`}\n                                            download=\"filename.json\"\n                                        >\n                                      {`Download Json`}\n                                        </a>\n                                        </Box>\n                                    </Grid>\n                                </Box>\n\n\n                            </Grid>\n                        }\n                    </>\n\n                )}\n\n\n\n\n\n            </Box>\n        </>\n\n    )\n}"],
  "mappings": "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",
  "names": ["import_react"]
}
